{
	"info": {
		"_postman_id": "b1bd6fab-8625-4c8c-bf90-76e6de80b45d",
		"name": "CLI Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23374465-b1bd6fab-8625-4c8c-bf90-76e6de80b45d"
	},
	"item": [
		{
			"name": "Get quote",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let res = pm.response.json();",
							"let quote = res[0].q;",
							"let author = res[0].a;",
							"console.log(`Quote: ${quote} \\n Author: ${author}`);",
							"",
							"// pm.test('Confirm quote and author are string values', function(){",
							"//     pm.expect.length(quote).to.be",
							"// })",
							"",
							"// pm.test(\"Your test name\", function () {",
							"//     pm.expect.length(res.quote).to.have.mo",
							"// });",
							"",
							"pm.test(\"Status code name has 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});"
						],
						"type": "text/javascript",
						"id": "a4a27de6-8580-4e03-a380-6d93ecf23692"
					}
				}
			],
			"id": "c66ef5fe-3239-4c27-84c0-819e61d72199",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://zenquotes.io/api/quotes/",
					"protocol": "https",
					"host": [
						"zenquotes",
						"io"
					],
					"path": [
						"api",
						"quotes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Number Trivia",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var textData = pm.response.text();",
							"console.log(textData);",
							"",
							"pm.test(\"Confirm response is string\", function () {",
							"    pm.expect(textData).to.be.string",
							"});"
						],
						"type": "text/javascript",
						"id": "537ce565-8dca-4347-a458-3f1e39ac9d22"
					}
				}
			],
			"id": "d75fa7ee-c5d0-4eec-b0d8-427a0aebd01f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://numbersapi.com/1048340/trivia?fragment=&notfound=floor",
					"protocol": "http",
					"host": [
						"numbersapi",
						"com"
					],
					"path": [
						"1048340",
						"trivia"
					],
					"query": [
						{
							"key": "fragment",
							"value": ""
						},
						{
							"key": "notfound",
							"value": "floor"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Definitions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"console.log(jsonData[0].meanings[0].definitions[0].definition);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Confirm specific definition\", function () {",
							"    pm.expect(jsonData[0].meanings[0].definitions[0].definition).to.deep.equal(\"To overwhelm with bewilderment; to amaze, confound, or stun, especially in a ludicrous manner.\")",
							"});"
						],
						"type": "text/javascript",
						"id": "cd863c3e-d96e-4764-8f3a-e8441e1d4873"
					}
				}
			],
			"id": "2f214b22-b765-4ae4-985f-71530c9d351c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.dictionaryapi.dev/api/v2/entries/en/flabbergasted",
					"protocol": "https",
					"host": [
						"api",
						"dictionaryapi",
						"dev"
					],
					"path": [
						"api",
						"v2",
						"entries",
						"en",
						"flabbergasted"
					]
				}
			},
			"response": []
		},
		{
			"name": "News",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"console.log(jsonData);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Confirm response in JSON response is 'ok' and result count is greater than 100\", function () {",
							"    pm.expect(jsonData.status).to.equal(\"ok\");",
							"    pm.expect(jsonData.totalResults).to.be.greaterThan(100);",
							"});"
						],
						"type": "text/javascript",
						"id": "516aa90c-5d82-4b26-9941-29452786a717"
					}
				}
			],
			"id": "d7446c26-a163-4d91-aa7f-f3b030413279",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{newsKey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://newsapi.org/v2/everything?q=peaceful&from=2022-12-31&to=2022-01-01",
					"protocol": "https",
					"host": [
						"newsapi",
						"org"
					],
					"path": [
						"v2",
						"everything"
					],
					"query": [
						{
							"key": "q",
							"value": "peaceful"
						},
						{
							"key": "from",
							"value": "2022-12-31"
						},
						{
							"key": "to",
							"value": "2022-01-01"
						}
					]
				}
			},
			"response": []
		}
	]
}